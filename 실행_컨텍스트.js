

// 소스 코드 평가 과정에서는 선언문만 먼저 실행한다.
const x = 1;
const y = 2;

function foo(a) {
    // 지역 변수
    // 함수 호출로 함수 내부로 들어오면 우선 소스 코드 평가가 이뤄지고
    // 매개변수와 지역 변수 선언문이 실행되고, 그 결과들이 실행 컨텍스트가 관리하는 지역 스코프에 등록
    // 함수 내부에서 지역 변수처럼 사용할 수 있는 arguments 객체가 생성되고 지역 스코프에 등록되고 this의 바인딩도 결정된다.
    const x = 10;
    const y = 20;

    console.log(a + x + y);
}
// var키워드로 선언된 전역 변수와 함수 선언문은 전역 객체의 프로퍼티와 메서드가 된다.


//코드 평가가 끝나면 런타임이 시작되어 전역 코드가 순차적으로 실행된다.
//함수가 호출되면 순차적으로 실행되던 전역 코드의 실행을 일시 중단하고 코드 실행 순서를 변경하여 함수 내부로 진입
foo(100);



//소스 코드 평가과정에서 var 키워드로 선언한 전역 변수와 함수 선언문으로 정의된 전역 함수는
// BingingObject를 통해 전역 객체의 프로퍼티와 메서드가 되어 전역 객체를 가리키는 식별자(window)없이 호출이 가능하다.


let k = 10;
function bar(){
    k = 100;
    console.log(k);
}
bar();

// ================================================
function printName() {
    return 'Hyunsol'
  }
   
  function findName() {
    return printName()
  }
   
  function sayMyName() {
    return findName()
  }
   
  sayMyName()


/*
  렉시컬 환경 : 특정 코드가 작성/선언된 장소(환경)이다.

  스크립트가 시작되면 모든 변수는 렉시컬 환경에 올라간다.
  아직 초기화 전이기 때문에 해당 변수를 만나기 전까지 참조를 할 수 없다.


*/